<!DOCTYPE html>
<html>
<head>
  <title>Earthquake Visualization</title>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/leaflet/1.3.1/leaflet.css" />
  <script src="https://cdn.jsdelivr.net/leaflet/1.3.1/leaflet.js"></script>
  <style>
    #map { height: 100%; }
  </style>
</head>
<body>
  <div id="map"></div>
  <script>
    // Make an HTTP request to the URL of the JSON file
    fetch('https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/4.5_week.geojson)
      .then(response => response.json()) // Parse the JSON data
      .then(data => {
        var map = L.map('map').setView([38.898, -77.036], 3);

        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
          attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors',
          maxZoom: 18,
        }).addTo(map);

        // Create a Leaflet GeoJSON layer and add it to the map
        L.geoJSON(data, {
          // Use circle markers to represent each earthquake
          pointToLayer: function (feature, latlng) {
            return L.circleMarker(latlng, {
              radius: Math.sqrt(feature.properties.mag) * 4, // Use the earthquake magnitude to determine the size of the marker
              fillColor: "#ff7800",
              color: "#000",
              weight: 1,
              opacity: 1,
              fillOpacity: 0.8
            });
          },

          // Add a popup to each marker with details about the earthquake
          onEachFeature: function (feature, layer) {
            layer.bindPopup('<h3>' + feature.properties.place + '</h3><p>' + new Date(feature.properties.time) + '</p><p>Magnitude: ' + feature.properties.mag + '</p>');
          }
        }).addTo(map);
      })
      .catch(error => console.error(error));
  </script>
</body>
</html>